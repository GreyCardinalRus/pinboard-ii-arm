   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.vLEDFlashTask,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	vLEDFlashTask:
  24              	.LFB1:
  25              		.file 1 "../FreeRTOS/Demo/Common/Minimal/flash.c"
   1:../FreeRTOS/Demo/Common/Minimal/flash.c **** /*
   2:../FreeRTOS/Demo/Common/Minimal/flash.c ****     FreeRTOS V7.1.0 - Copyright (C) 2011 Real Time Engineers Ltd.
   3:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	
   4:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
   5:../FreeRTOS/Demo/Common/Minimal/flash.c ****     ***************************************************************************
   6:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *                                                                       *
   7:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    FreeRTOS tutorial books are available in pdf and paperback.        *
   8:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    Complete, revised, and edited pdf reference manuals are also       *
   9:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    available.                                                         *
  10:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *                                                                       *
  11:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    Purchasing FreeRTOS documentation will not only help you, by       *
  12:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    ensuring you get running as quickly as possible and with an        *
  13:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    in-depth knowledge of how to use FreeRTOS, it will also help       *
  14:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    the FreeRTOS project to continue with its mission of providing     *
  15:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    professional grade, cross platform, de facto standard solutions    *
  16:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    for microcontrollers - completely free of charge!                  *
  17:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *                                                                       *
  18:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    >>> See http://www.FreeRTOS.org/Documentation for details. <<<     *
  19:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *                                                                       *
  20:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *    Thank you for using FreeRTOS, and thank you for your support!      *
  21:../FreeRTOS/Demo/Common/Minimal/flash.c ****      *                                                                       *
  22:../FreeRTOS/Demo/Common/Minimal/flash.c ****     ***************************************************************************
  23:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  24:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  25:../FreeRTOS/Demo/Common/Minimal/flash.c ****     This file is part of the FreeRTOS distribution.
  26:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  27:../FreeRTOS/Demo/Common/Minimal/flash.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  28:../FreeRTOS/Demo/Common/Minimal/flash.c ****     the terms of the GNU General Public License (version 2) as published by the
  29:../FreeRTOS/Demo/Common/Minimal/flash.c ****     Free Software Foundation AND MODIFIED BY the FreeRTOS exception.
  30:../FreeRTOS/Demo/Common/Minimal/flash.c ****     >>>NOTE<<< The modification to the GPL is included to allow you to
  31:../FreeRTOS/Demo/Common/Minimal/flash.c ****     distribute a combined work that includes FreeRTOS without being obliged to
  32:../FreeRTOS/Demo/Common/Minimal/flash.c ****     provide the source code for proprietary components outside of the FreeRTOS
  33:../FreeRTOS/Demo/Common/Minimal/flash.c ****     kernel.  FreeRTOS is distributed in the hope that it will be useful, but
  34:../FreeRTOS/Demo/Common/Minimal/flash.c ****     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  35:../FreeRTOS/Demo/Common/Minimal/flash.c ****     or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
  36:../FreeRTOS/Demo/Common/Minimal/flash.c ****     more details. You should have received a copy of the GNU General Public
  37:../FreeRTOS/Demo/Common/Minimal/flash.c ****     License and the FreeRTOS license exception along with FreeRTOS; if not it
  38:../FreeRTOS/Demo/Common/Minimal/flash.c ****     can be viewed here: http://www.freertos.org/a00114.html and also obtained
  39:../FreeRTOS/Demo/Common/Minimal/flash.c ****     by writing to Richard Barry, contact details for whom are available on the
  40:../FreeRTOS/Demo/Common/Minimal/flash.c ****     FreeRTOS WEB site.
  41:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  42:../FreeRTOS/Demo/Common/Minimal/flash.c ****     1 tab == 4 spaces!
  43:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  44:../FreeRTOS/Demo/Common/Minimal/flash.c ****     http://www.FreeRTOS.org - Documentation, latest information, license and
  45:../FreeRTOS/Demo/Common/Minimal/flash.c ****     contact details.
  46:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  47:../FreeRTOS/Demo/Common/Minimal/flash.c ****     http://www.SafeRTOS.com - A version that is certified for use in safety
  48:../FreeRTOS/Demo/Common/Minimal/flash.c ****     critical systems.
  49:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  50:../FreeRTOS/Demo/Common/Minimal/flash.c ****     http://www.OpenRTOS.com - Commercial support, development, porting,
  51:../FreeRTOS/Demo/Common/Minimal/flash.c ****     licensing and training services.
  52:../FreeRTOS/Demo/Common/Minimal/flash.c **** */
  53:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  54:../FreeRTOS/Demo/Common/Minimal/flash.c **** /**
  55:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * This version of flash .c is for use on systems that have limited stack space
  56:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * and no display facilities.  The complete version can be found in the 
  57:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * Demo/Common/Full directory.
  58:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * 
  59:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * Three tasks are created, each of which flash an LED at a different rate.  The first 
  60:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * LED flashes every 200ms, the second every 400ms, the third every 600ms.
  61:../FreeRTOS/Demo/Common/Minimal/flash.c ****  *
  62:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * The LED flash tasks provide instant visual feedback.  They show that the scheduler 
  63:../FreeRTOS/Demo/Common/Minimal/flash.c ****  * is still operational.
  64:../FreeRTOS/Demo/Common/Minimal/flash.c ****  *
  65:../FreeRTOS/Demo/Common/Minimal/flash.c ****  */
  66:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  67:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  68:../FreeRTOS/Demo/Common/Minimal/flash.c **** #include <stdlib.h>
  69:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  70:../FreeRTOS/Demo/Common/Minimal/flash.c **** /* Scheduler include files. */
  71:../FreeRTOS/Demo/Common/Minimal/flash.c **** #include "FreeRTOS.h"
  72:../FreeRTOS/Demo/Common/Minimal/flash.c **** #include "task.h"
  73:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  74:../FreeRTOS/Demo/Common/Minimal/flash.c **** /* Demo program include files. */
  75:../FreeRTOS/Demo/Common/Minimal/flash.c **** #include "partest.h"
  76:../FreeRTOS/Demo/Common/Minimal/flash.c **** #include "flash.h"
  77:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  78:../FreeRTOS/Demo/Common/Minimal/flash.c **** #define ledSTACK_SIZE		configMINIMAL_STACK_SIZE
  79:../FreeRTOS/Demo/Common/Minimal/flash.c **** #define ledNUMBER_OF_LEDS	( 3 )
  80:../FreeRTOS/Demo/Common/Minimal/flash.c **** #define ledFLASH_RATE_BASE	( ( portTickType ) 333 )
  81:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  82:../FreeRTOS/Demo/Common/Minimal/flash.c **** /* Variable used by the created tasks to calculate the LED number to use, and
  83:../FreeRTOS/Demo/Common/Minimal/flash.c **** the rate at which they should flash the LED. */
  84:../FreeRTOS/Demo/Common/Minimal/flash.c **** static volatile unsigned portBASE_TYPE uxFlashTaskNumber = 0;
  85:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  86:../FreeRTOS/Demo/Common/Minimal/flash.c **** /* The task that is created three times. */
  87:../FreeRTOS/Demo/Common/Minimal/flash.c **** static portTASK_FUNCTION_PROTO( vLEDFlashTask, pvParameters );
  88:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  89:../FreeRTOS/Demo/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
  90:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  91:../FreeRTOS/Demo/Common/Minimal/flash.c **** void vStartLEDFlashTasks( unsigned portBASE_TYPE uxPriority )
  92:../FreeRTOS/Demo/Common/Minimal/flash.c **** {
  93:../FreeRTOS/Demo/Common/Minimal/flash.c **** signed portBASE_TYPE xLEDTask;
  94:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
  95:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	/* Create the three tasks. */
  96:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	for( xLEDTask = 0; xLEDTask < ledNUMBER_OF_LEDS; ++xLEDTask )
  97:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	{
  98:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		/* Spawn the task. */
  99:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		xTaskCreate( vLEDFlashTask, ( signed char * ) "LEDx", ledSTACK_SIZE, NULL, uxPriority, ( xTaskHan
 100:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	}
 101:../FreeRTOS/Demo/Common/Minimal/flash.c **** }
 102:../FreeRTOS/Demo/Common/Minimal/flash.c **** /*-----------------------------------------------------------*/
 103:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 104:../FreeRTOS/Demo/Common/Minimal/flash.c **** static portTASK_FUNCTION( vLEDFlashTask, pvParameters )
 105:../FreeRTOS/Demo/Common/Minimal/flash.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 4, -16
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
 106:../FreeRTOS/Demo/Common/Minimal/flash.c **** portTickType xFlashRate, xLastFlashTime;
 107:../FreeRTOS/Demo/Common/Minimal/flash.c **** unsigned portBASE_TYPE uxLED;
 108:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 109:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	/* The parameters are not used. */
 110:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	( void ) pvParameters;
 111:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 112:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	/* Calculate the LED and flash rate. */
 113:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	portENTER_CRITICAL();
  41              		.loc 1 113 0
  42 0004 FFF7FEFF 		bl	vPortEnterCritical
  43              	.LVL1:
 114:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	{
 115:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		/* See which of the eight LED's we should use. */
 116:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		uxLED = uxFlashTaskNumber;
  44              		.loc 1 116 0
  45 0008 40F20003 		movw	r3, #:lower16:.LANCHOR0
  46 000c C0F20003 		movt	r3, #:upper16:.LANCHOR0
  47 0010 1D68     		ldr	r5, [r3, #0]
  48              	.LVL2:
 117:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 118:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		/* Update so the next task uses the next LED. */
 119:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		uxFlashTaskNumber++;
  49              		.loc 1 119 0
  50 0012 1968     		ldr	r1, [r3, #0]
 120:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	}
 121:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	portEXIT_CRITICAL();
 122:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 123:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xFlashRate = ledFLASH_RATE_BASE + ( ledFLASH_RATE_BASE * ( portTickType ) uxLED );
 124:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xFlashRate /= portTICK_RATE_MS;
 125:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 126:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	/* We will turn the LED on and off again in the delay period, so each
 127:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	delay is only half the total period. */
 128:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xFlashRate /= ( portTickType ) 2;
 129:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 130:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	/* We need to initialise xLastFlashTime prior to the first call to 
 131:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	vTaskDelayUntil(). */
 132:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xLastFlashTime = xTaskGetTickCount();
  51              		.loc 1 132 0
  52 0014 02AC     		add	r4, sp, #8
 119:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		uxFlashTaskNumber++;
  53              		.loc 1 119 0
  54 0016 4A1C     		adds	r2, r1, #1
  55 0018 1A60     		str	r2, [r3, #0]
 121:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	portEXIT_CRITICAL();
  56              		.loc 1 121 0
  57 001a FFF7FEFF 		bl	vPortExitCritical
 123:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xFlashRate = ledFLASH_RATE_BASE + ( ledFLASH_RATE_BASE * ( portTickType ) uxLED );
  58              		.loc 1 123 0
  59 001e 40F24D10 		movw	r0, #333
  60 0022 05FB0006 		mla	r6, r5, r0, r0
  61              	.LVL3:
  62              		.loc 1 132 0
  63 0026 FFF7FEFF 		bl	xTaskGetTickCount
 128:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	xFlashRate /= ( portTickType ) 2;
  64              		.loc 1 128 0
  65 002a 7608     		lsrs	r6, r6, #1
  66              	.LVL4:
  67              		.loc 1 132 0
  68 002c 44F8040D 		str	r0, [r4, #-4]!
  69              	.LVL5:
  70              	.L2:
 133:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 134:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	for(;;)
 135:../FreeRTOS/Demo/Common/Minimal/flash.c **** 	{
 136:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED on. */
 137:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
  71              		.loc 1 137 0 discriminator 1
  72 0030 3146     		mov	r1, r6
  73 0032 2046     		mov	r0, r4
  74 0034 FFF7FEFF 		bl	vTaskDelayUntil
 138:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
  75              		.loc 1 138 0 discriminator 1
  76 0038 2846     		mov	r0, r5
  77 003a FFF7FEFF 		bl	vParTestToggleLED
 139:../FreeRTOS/Demo/Common/Minimal/flash.c **** 
 140:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		/* Delay for half the flash period then turn the LED off. */
 141:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		vTaskDelayUntil( &xLastFlashTime, xFlashRate );
  78              		.loc 1 141 0 discriminator 1
  79 003e 2046     		mov	r0, r4
  80 0040 3146     		mov	r1, r6
  81 0042 FFF7FEFF 		bl	vTaskDelayUntil
 142:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		vParTestToggleLED( uxLED );
  82              		.loc 1 142 0 discriminator 1
  83 0046 2846     		mov	r0, r5
  84 0048 FFF7FEFF 		bl	vParTestToggleLED
  85 004c F0E7     		b	.L2
  86              		.cfi_endproc
  87              	.LFE1:
  89 004e 00BF     		.section	.text.vStartLEDFlashTasks,"ax",%progbits
  90              		.align	2
  91              		.global	vStartLEDFlashTasks
  92              		.thumb
  93              		.thumb_func
  95              	vStartLEDFlashTasks:
  96              	.LFB0:
  92:../FreeRTOS/Demo/Common/Minimal/flash.c **** {
  97              		.loc 1 92 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              	.LVL6:
 102 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 20
 105              		.cfi_offset 14, -4
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 6, -12
 108              		.cfi_offset 5, -16
 109              		.cfi_offset 4, -20
  99:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		xTaskCreate( vLEDFlashTask, ( signed char * ) "LEDx", ledSTACK_SIZE, NULL, uxPriority, ( xTaskHan
 110              		.loc 1 99 0
 111 0002 40F20006 		movw	r6, #:lower16:vLEDFlashTask
 112 0006 40F20005 		movw	r5, #:lower16:.LC0
 113 000a 0024     		movs	r4, #0
 114 000c C0F20006 		movt	r6, #:upper16:vLEDFlashTask
 115 0010 C0F20005 		movt	r5, #:upper16:.LC0
  92:../FreeRTOS/Demo/Common/Minimal/flash.c **** {
 116              		.loc 1 92 0
 117 0014 85B0     		sub	sp, sp, #20
 118              	.LCFI3:
 119              		.cfi_def_cfa_offset 40
  92:../FreeRTOS/Demo/Common/Minimal/flash.c **** {
 120              		.loc 1 92 0
 121 0016 0746     		mov	r7, r0
  99:../FreeRTOS/Demo/Common/Minimal/flash.c **** 		xTaskCreate( vLEDFlashTask, ( signed char * ) "LEDx", ledSTACK_SIZE, NULL, uxPriority, ( xTaskHan
 122              		.loc 1 99 0
 123 0018 2946     		mov	r1, r5
 124 001a 7822     		movs	r2, #120
 125 001c 2346     		mov	r3, r4
 126 001e 3046     		mov	r0, r6
 127              	.LVL7:
 128 0020 0097     		str	r7, [sp, #0]
 129 0022 0194     		str	r4, [sp, #4]
 130 0024 0294     		str	r4, [sp, #8]
 131 0026 0394     		str	r4, [sp, #12]
 132 0028 FFF7FEFF 		bl	xTaskGenericCreate
 133              	.LVL8:
 134 002c 2946     		mov	r1, r5
 135 002e 7822     		movs	r2, #120
 136 0030 2346     		mov	r3, r4
 137 0032 3046     		mov	r0, r6
 138 0034 0097     		str	r7, [sp, #0]
 139 0036 0194     		str	r4, [sp, #4]
 140 0038 0294     		str	r4, [sp, #8]
 141 003a 0394     		str	r4, [sp, #12]
 142 003c FFF7FEFF 		bl	xTaskGenericCreate
 143              	.LVL9:
 144 0040 3046     		mov	r0, r6
 145 0042 2946     		mov	r1, r5
 146 0044 7822     		movs	r2, #120
 147 0046 2346     		mov	r3, r4
 148 0048 0097     		str	r7, [sp, #0]
 149 004a 0194     		str	r4, [sp, #4]
 150 004c 0294     		str	r4, [sp, #8]
 151 004e 0394     		str	r4, [sp, #12]
 152 0050 FFF7FEFF 		bl	xTaskGenericCreate
 153              	.LVL10:
 101:../FreeRTOS/Demo/Common/Minimal/flash.c **** }
 154              		.loc 1 101 0
 155 0054 05B0     		add	sp, sp, #20
 156 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 157              		.cfi_endproc
 158              	.LFE0:
 160              		.section	.bss.uxFlashTaskNumber,"aw",%nobits
 161              		.align	2
 162              		.set	.LANCHOR0,. + 0
 165              	uxFlashTaskNumber:
 166 0000 00000000 		.space	4
 167              		.section	.rodata.str1.4,"aMS",%progbits,1
 168              		.align	2
 169              	.LC0:
 170 0000 4C454478 		.ascii	"LEDx\000"
 170      00
 171 0005 000000   		.text
 172              	.Letext0:
 173              		.file 2 "../FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM3/portmacro.h"
 174              		.file 3 "../FreeRTOS/Source/include/task.h"
DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
     /tmp/ccYNrQ3j.s:19     .text.vLEDFlashTask:00000000 $t
     /tmp/ccYNrQ3j.s:23     .text.vLEDFlashTask:00000000 vLEDFlashTask
     /tmp/ccYNrQ3j.s:162    .bss.uxFlashTaskNumber:00000000 .LANCHOR0
     /tmp/ccYNrQ3j.s:90     .text.vStartLEDFlashTasks:00000000 $t
     /tmp/ccYNrQ3j.s:95     .text.vStartLEDFlashTasks:00000000 vStartLEDFlashTasks
     /tmp/ccYNrQ3j.s:169    .rodata.str1.4:00000000 .LC0
     /tmp/ccYNrQ3j.s:161    .bss.uxFlashTaskNumber:00000000 $d
     /tmp/ccYNrQ3j.s:165    .bss.uxFlashTaskNumber:00000000 uxFlashTaskNumber
     /tmp/ccYNrQ3j.s:168    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskGetTickCount
vTaskDelayUntil
vParTestToggleLED
xTaskGenericCreate
